//中序遍历（DFS）插入数据，层序遍历（BFS）输出数据。
#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;
int N;
int tree[102][2];
int num[102];
int value[102];
int ans[102];
int k=0;
void inOrder(int n){
	if(tree[n][0]!=-1){
		int t=tree[n][0];
		inOrder(t);
	}
	value[n]=num[k++];
	if(tree[n][1]!=-1){
		int t=tree[n][1];
		inOrder(t);
	}
}
void bfs(){
	queue<int> q;
	q.push(0);
	int k=0;
	ans[k++]=value[0];
	while(!q.empty()){
		int t=q.front();q.pop();
		if(tree[t][0]!=-1){
			q.push(tree[t][0]);
			ans[k++]=value[tree[t][0]];
		}
		if(tree[t][1]!=-1){
			q.push(tree[t][1]);
			ans[k++]=value[tree[t][1]];
		}
	}
}
int main(){
	cin>>N;
	for(int i=0;i<N;i++){
		cin>>tree[i][0]>>tree[i][1];
	}
	for(int i=0;i<N;i++){
		cin>>num[i];
	}
	sort(num,num+N);
	inOrder(0);
	bfs();
	for(int i=0;i<N;i++){
		if(i==0) cout<<ans[i];
		else cout<<" "<<ans[i];
	}
	cout<<endl;
	return 0;
}
